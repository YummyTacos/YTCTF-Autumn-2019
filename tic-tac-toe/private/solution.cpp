void aimove(){
    const int di[4]={1, 1, 0, -1};//два массива для удобного задания направлений прямых (вправо, вправо-вверх, вверх, влево-вверх)
    const int dj[4]={0, 1, 1, 1};
    int maxcost = 0;//тут максимальная выгодность
    int maxi=0;//тут координаты клетки с максимальной выгодностью
    int maxj=0;
    for (int i=0; i<size; i++)//проход по одной оси
        for (int j=0; j<size; j++)//по второй оси
            if (field[i][j]==0){//если клетка пустая, то
                int cost=0;//выгодность по умолчанию 0
                for (int k =0; k<4; k++)//для каждого из 4 направлений
                    for (int l=-4; l<=0; l++)//для каждой линии длины 5, содержащей эту клетку
                        if (checkfield(i, j, di[k], dj[k], l)){//если прямая полностью лежит в пределах поля
                            int count[3]={0, 0, 0};// счетчик пустых клеток/крестиков/ноликов
                            for (int m=0; m<5; m++) count[field[i+di[k]\*(l+m)][j+dj[k]*(l+m)]]++;//считаем для каждой клетки в линии
                            if (count[1] == 0) cost+=(1 << 3*count[2]);//оборона
                            if (count[2] == 0) cost+=(2 << 3*count[1]);//атака
                        }
                if (cost>maxcost){maxcost = cost; maxi=i; maxj=j;//выбираем самую выгодную клетку
                }
            }
    go(maxi, maxj, 1);//делаем ход в выбранную клетку
}